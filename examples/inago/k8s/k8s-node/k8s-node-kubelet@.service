[Unit]
Description=k8s-node-kubelet
Requires=k8s-node-proxy@%i.service
After=k8s-node-proxy@%i.service

[Service]
User=core
EnvironmentFile=/etc/environment
Restart=on-failure
RestartSec=1
StartLimitInterval=300s
StartLimitBurst=3
TimeoutStartSec=0
EnvironmentFile=/etc/network-environment
Environment="IMAGE=giantswarm/k8s-kubelet:1.2.0"
Environment="NAME=%p-%i.service"
Environment="NETWORK_CONFIG_CONTAINER="
ExecStartPre=/usr/bin/docker pull $IMAGE
ExecStartPre=-/usr/bin/docker stop -t 10 $NAME
ExecStartPre=-/usr/bin/docker rm -f $NAME
ExecStartPre=/bin/sh -c "while ! curl --output /dev/null --silent --head --fail http://$(/usr/bin/fleetctl list-units -fields=unit,machine --full --no-legend 2>/dev/null | grep ^k8s-master-api-server.service | cut -d/ -f2 | paste -d, -s):8080; do sleep 1 && echo -n .; done"
ExecStart=/bin/sh -c "/usr/bin/docker run --rm --pid=host --net=host --privileged=true \
-v /usr/bin/nsenter:/nsenter \
-v /usr:/usr \
-v /:/rootfs:ro \
-v /etc/os-release:/etc/os-release \
-v /usr/share/ca-certificates/:/etc/ssl/certs \
-v /sys:/sys:ro \
-v /var/lib/docker/:/var/lib/docker:ro \
-v /var/lib/kubelet/:/var/lib/kubelet:rw \
-v /var/run:/var/run:rw \
$IMAGE \
--address=0.0.0.0 \
--port=10250 \
--hostname_override=${COREOS_PRIVATE_IPV4} \
--api_servers=$(/usr/bin/fleetctl list-units -fields=unit,machine --full --no-legend 2>/dev/null | grep ^k8s-master-api-server.service | cut -d/ -f2 | paste -d, -s):8080 \
--containerized \
--enable-server \
--logtostderr=true \
--machine-id-file=/rootfs/etc/machine-id \
--cadvisor_port=4194 \
--healthz_bind_address=0.0.0.0 \
--healthz_port=10248 \
--v=2"
ExecStop=-/usr/bin/docker stop -t 10 $NAME
ExecStopPost=-/usr/bin/docker rm -f $NAME

[X-Fleet]
Conflicts=k8s-node-kubelet@*.service
MachineOf=k8s-node-proxy@%i.service